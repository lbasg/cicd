name: CICD MAIN WORKFLOW
on: 
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
jobs: 

  Validate-Iberdrolafile:  
    runs-on: ubuntu-latest
    outputs: 
      build_path: ${{ steps.iberdrolafile.outputs.build_path }}
      pipeline_agent: ${{ steps.iberdrolafile.outputs.pipeline_agent }}
    steps:
      #- name: Setup-Java
      #  uses: actions/setup-java@v4.2.1
      #  with:
      #    distribution: 'temurin' # See 'Supported distributions' for available options
      #    java-version: '11'
      #    overwrite-settings: false
      - name: Checkout Iberdrolafile
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          sparse-checkout: |
            Iberdrolafile
          sparse-checkout-cone-mode: false
      - name: Parse Iberdrolafile
        id: iberdrolafile
        run: | 
          s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
          sed -ne "s|^\($s\):|\1|" \
          -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
          -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  Iberdrolafile |
          awk -F$fs '{
          indent = length($1)/2;
          vname[indent] = $2;
          for (i in vname) {if (i > indent) {delete vname[i]}}
          if (length($3) > 0) {
            vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
            printf("%s%s=%s\n",vn, $2, $3) 
          }
          }' | sed 's/__/_/g' | tee -a $GITHUB_OUTPUT
    
  Build:
    if: ${{ needs.Validate-Iberdrolafile.outputs.pipeline_agent == 'jdk11' }}
    needs: [Validate-Iberdrolafile]
    uses: lbasg/cicd/.github/workflows/build.yml@main
    with: 
      repository: ${{ inputs.repository }}
      path: ${{ needs.Validate-Iberdrolafile.outputs.build_path }}
      agent: ${{ needs.Validate-Iberdrolafile.outputs.pipeline_agent }}
      

